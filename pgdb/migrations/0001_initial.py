# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-07-27 21:05
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AcousticAnalysis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('source', models.CharField(choices=[('P', 'Praat'), ('R', 'REAPER'), ('R', 'Acousticsim')], default='P', max_length=1)),
                ('algorithm', models.CharField(choices=[('S', 'Speaker-adapted'), ('B', 'Basic'), ('G', 'Gendered')], default='S', max_length=1)),
                ('type', models.CharField(choices=[('T', 'Time series'), ('P', 'Point')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Corpus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('source_directory', models.FilePathField(allow_files=False, allow_folders=True, default='', path='/mnt/d/Data/PolyglotData')),
                ('input_format', models.CharField(choices=[('M', 'MFA forced aligned TextGrids'), ('F', 'FAVE forced aligned TextGrids'), ('L', 'LaBB-CAT TextGrid output'), ('P', 'Partitur files'), ('T', 'TIMIT'), ('B', 'Buckeye')], default='M', max_length=1)),
                ('status', models.CharField(choices=[('NI', 'Not imported'), ('I', 'Imported'), ('IR', 'Import running'), ('ER', 'Enrichment running'), ('AR', 'Acoustics running'), ('QR', 'Query running')], default='NI', max_length=2)),
                ('current_task_id', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'verbose_name_plural': 'corpora',
            },
        ),
        migrations.CreateModel(
            name='Database',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('neo4j_http_port', models.SmallIntegerField()),
                ('neo4j_https_port', models.SmallIntegerField()),
                ('neo4j_bolt_port', models.SmallIntegerField()),
                ('neo4j_admin_port', models.SmallIntegerField()),
                ('influxdb_http_port', models.SmallIntegerField()),
                ('influxdb_meta_port', models.SmallIntegerField()),
                ('influxdb_udp_port', models.SmallIntegerField()),
                ('influxdb_admin_port', models.SmallIntegerField()),
                ('status', models.CharField(choices=[('S', 'Stopped'), ('R', 'Running'), ('E', 'Error')], default='S', max_length=1)),
                ('neo4j_pid', models.IntegerField(blank=True, null=True)),
                ('influxdb_pid', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Discourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('corpus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discourses', to='pgdb.Corpus')),
            ],
        ),
        migrations.CreateModel(
            name='PraatScript',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('file_path', models.FileField(upload_to='')),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Query',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('export_file_name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='SoundFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_path', models.FilePathField(match='*.wav', max_length=250, path='/mnt/d/Data/PolyglotData', recursive=True)),
                ('low_freq_path', models.FilePathField(match='*.wav', max_length=250, path='/mnt/d/bestiary-data', recursive=True)),
                ('vowel_freq_path', models.FilePathField(match='*.wav', max_length=250, path='/mnt/d/bestiary-data', recursive=True)),
                ('consonant_freq_path', models.FilePathField(match='*.wav', max_length=250, path='/mnt/d/bestiary-data', recursive=True)),
                ('duration', models.FloatField()),
                ('num_channels', models.IntegerField(verbose_name=2)),
                ('discourse', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sound_file', to='pgdb.Discourse')),
            ],
        ),
        migrations.CreateModel(
            name='Speaker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('corpus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='speakers', to='pgdb.Corpus')),
            ],
        ),
        migrations.AddField(
            model_name='corpus',
            name='database',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='corpora', to='pgdb.Database'),
        ),
        migrations.AddField(
            model_name='acousticanalysis',
            name='script',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analyses', to='pgdb.PraatScript'),
        ),
    ]
